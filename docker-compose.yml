version: "3"
services:
  react:
    build: ./react
    ports:
      - "5173:5173"
    networks:
      assign1-network:
        ipv4_address: 10.5.0.6
  
  react-1:
    build: ./react-1
    ports:
      - "5174:5174"
    networks:
      assign1-network:
        ipv4_address: 10.5.0.9
  
  express-backend:
    depends_on:
      mysql:
        condition: service_healthy
    build: ./backend-server
    ports:
      - "3001:3001"
    networks:
      assign1-network:
        ipv4_address: 10.5.0.8

  file-system:
    build: ./fs
    ports:
      - "5000:5000"
    # networks:
    #   assign1-network:
    #     ipv4_address: 10.5.0.7
  mysql:
      image: mysql:latest
      build: ./db
      env_file:
        - .env
      environment:
        MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
        MYSQL_ROOT_HOST: '%'
      ports: 
        - "33061:3306"
      restart: always
      volumes: 
        - my-db:/var/lib/mysql
        - ./db/data.sql:/docker-entrypoint-initdb.d/data.sql:ro
      healthcheck:
            test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
            timeout: 5s
            retries: 10
      networks:
        assign1-network:
          ipv4_address: 10.5.0.7

volumes:
  my-db:

networks:
  assign1-network:
    driver: bridge
    ipam:
      config:
        - subnet: 10.5.0.0/24
          gateway: 10.5.0.1


